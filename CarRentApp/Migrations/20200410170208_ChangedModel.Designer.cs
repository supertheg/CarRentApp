// <auto-generated />
using CarRentApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRentApp.Migrations
{
    [DbContext(typeof(CarRentDbContext))]
    [Migration("20200410170208_ChangedModel")]
    partial class ChangedModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRentApp.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasDiscriminator<int>("Type");
                });

            modelBuilder.Entity("CarRentApp.CarRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("CarRentals");
                });

            modelBuilder.Entity("CarRentApp.Sedan", b =>
                {
                    b.HasBaseType("CarRentApp.Car");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("CarRentApp.Sport", b =>
                {
                    b.HasBaseType("CarRentApp.Car");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("CarRentApp.Van", b =>
                {
                    b.HasBaseType("CarRentApp.Car");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("CarRentApp.Car", b =>
                {
                    b.OwnsOne("CarRentApp.AirConditioner", "AirConditioner", b1 =>
                        {
                            b1.Property<int>("CarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrentTemperature")
                                .HasColumnType("int");

                            b1.HasKey("CarId");

                            b1.ToTable("Cars");

                            b1.WithOwner()
                                .HasForeignKey("CarId");
                        });

                    b.OwnsOne("CarRentApp.Radio", "Radio", b1 =>
                        {
                            b1.Property<int>("CarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrentChannel")
                                .HasColumnType("int");

                            b1.Property<bool>("IsRadioOn")
                                .HasColumnType("bit");

                            b1.HasKey("CarId");

                            b1.ToTable("Cars");

                            b1.WithOwner()
                                .HasForeignKey("CarId");
                        });
                });

            modelBuilder.Entity("CarRentApp.CarRental", b =>
                {
                    b.HasOne("CarRentApp.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
